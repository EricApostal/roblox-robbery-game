--[[
    File for controlling train movements
]]

local train = require(script.Parent.train_movement)
local nodes = game.Workspace:WaitForChild("train").train_nodes

function make_positions()
    --[[
        Generats a circle of nodes for the train to follow

        Partially generated by google bard
    ]]
    local positions = {}
    local radius = 300
    local offset = 200

    for angle = 0, 360, 1 do
      local x = radius * math.cos(angle * math.pi / 180) + 200
      local z = radius * math.sin(angle * math.pi / 180) + 200
      table.insert(positions, Vector3.new(x, 0, z))
    end
    for index, position in positions do
      local part = Instance.new("Part")
      part.Position = position
      part.Parent = nodes
      part.Anchored = true
    end
end

make_positions()

local nodelist = {}
for k,v in nodes:GetChildren() do
	table.insert(nodelist, v)
end

function do_node_thing(cart, parent)
  coroutine.wrap(function()
    if not parent then
      while true do
        cart:move_to_nodes(nodelist)
      end
        
    else 
      while true do
        cart:move_to_node(parent.child_node, nodelist)
      end
    end
  end)()
end


function spawn_train(length)
  local head = train.new()
  local carts = {}
  
  table.insert(carts, head)
  do_node_thing(head)

  for i = 2, length do
    local cart = train.new()
    do_node_thing(cart, carts[i-1])
    carts[#carts + 1] = cart
  end
end

-- local head_cart = train.new()
-- local other_cart = train.new()
-- local cart_3 = train.new()

-- do_node_thing(head_cart)
-- do_node_thing(other_cart, head_cart)
-- do_node_thing(cart_3, other_cart)

spawn_train(20)

print("done making carts")